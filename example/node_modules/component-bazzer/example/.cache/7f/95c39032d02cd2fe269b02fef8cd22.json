{"id":"../node_modules/@restart/hooks/esm/useForceUpdate.js","dependencies":[{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/example/package.json","includedInParent":true,"mtime":1717219727430},{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/.babelrc","includedInParent":true,"mtime":1717215631604},{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/@restart/hooks/package.json","includedInParent":true,"mtime":1717220432127},{"name":"react","loc":{"line":1,"column":27},"parent":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/@restart/hooks/esm/useForceUpdate.js","resolved":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useForceUpdate;\n\nvar _react = require(\"react\");\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nfunction useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = (0, _react.useReducer)(state => !state, false);\n  return dispatch;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":3,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":19,"column":15}},{"name":"useForceUpdate","generated":{"line":26,"column":9},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":19,"column":24}},{"generated":{"line":26,"column":23},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":19,"column":15}},{"generated":{"line":26,"column":26},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":19,"column":41}},{"generated":{"line":27,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":20,"column":2}},{"generated":{"line":28,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":21,"column":2}},{"generated":{"line":29,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":2}},{"generated":{"line":29,"column":8},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":8}},{"name":"dispatch","generated":{"line":29,"column":11},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":11}},{"generated":{"line":29,"column":19},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":8}},{"generated":{"line":29,"column":23},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":23}},{"name":"state","generated":{"line":29,"column":46},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":34}},{"generated":{"line":29,"column":51},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":39}},{"generated":{"line":29,"column":55},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":43}},{"name":"state","generated":{"line":29,"column":56},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":44}},{"generated":{"line":29,"column":61},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":23}},{"generated":{"line":29,"column":63},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":51}},{"generated":{"line":29,"column":68},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":23}},{"generated":{"line":29,"column":69},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":22,"column":2}},{"generated":{"line":30,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":23,"column":2}},{"name":"dispatch","generated":{"line":30,"column":9},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":23,"column":9}},{"generated":{"line":30,"column":17},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":23,"column":2}},{"generated":{"line":31,"column":0},"source":"../node_modules/@restart/hooks/esm/useForceUpdate.js","original":{"line":24,"column":1}}],"sources":{"../node_modules/@restart/hooks/esm/useForceUpdate.js":"import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}"},"lineCount":null}},"error":null,"hash":"aaaf9a31eaf319c0d96a2b94f512e01c","cacheData":{"env":{}}}