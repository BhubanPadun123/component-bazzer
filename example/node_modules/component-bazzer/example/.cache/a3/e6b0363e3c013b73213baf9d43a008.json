{"id":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","dependencies":[{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/example/package.json","includedInParent":true,"mtime":1717219727430},{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/.babelrc","includedInParent":true,"mtime":1717215631604},{"name":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/@restart/hooks/package.json","includedInParent":true,"mtime":1717220432127},{"name":"react","loc":{"line":1,"column":23},"parent":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/@restart/hooks/esm/useUpdatedRef.js","resolved":"/home/taskmonk/Projects/NPM-Package/component-bazzer/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useUpdatedRef;\n\nvar _react = require(\"react\");\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nfunction useUpdatedRef(value) {\n  const valueRef = (0, _react.useRef)(value);\n  valueRef.current = value;\n  return valueRef;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":15}},{"name":"useUpdatedRef","generated":{"line":16,"column":9},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":24}},{"generated":{"line":16,"column":22},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":15}},{"name":"value","generated":{"line":16,"column":23},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":38}},{"generated":{"line":16,"column":28},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":15}},{"generated":{"line":16,"column":30},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":9,"column":45}},{"generated":{"line":17,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":2}},{"name":"valueRef","generated":{"line":17,"column":8},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":8}},{"generated":{"line":17,"column":16},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":16}},{"generated":{"line":17,"column":19},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":19}},{"name":"value","generated":{"line":17,"column":38},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":26}},{"generated":{"line":17,"column":43},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":19}},{"generated":{"line":17,"column":44},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":10,"column":2}},{"name":"valueRef","generated":{"line":18,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":2}},{"name":"valueRef","generated":{"line":18,"column":2},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":2}},{"generated":{"line":18,"column":10},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":10}},{"name":"current","generated":{"line":18,"column":11},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":11}},{"generated":{"line":18,"column":18},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":2}},{"name":"value","generated":{"line":18,"column":21},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":21}},{"generated":{"line":18,"column":26},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":11,"column":2}},{"generated":{"line":19,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":12,"column":2}},{"name":"valueRef","generated":{"line":19,"column":9},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":12,"column":9}},{"generated":{"line":19,"column":17},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":12,"column":2}},{"generated":{"line":20,"column":0},"source":"../node_modules/@restart/hooks/esm/useUpdatedRef.js","original":{"line":13,"column":1}}],"sources":{"../node_modules/@restart/hooks/esm/useUpdatedRef.js":"import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}"},"lineCount":null}},"error":null,"hash":"a1a95a91517a8b73a59fc01bd252c015","cacheData":{"env":{}}}